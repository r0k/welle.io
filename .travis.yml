language: none
compiler: gcc
sudo: require
dist: trusty
python:
  - "3.6"
env:
  # "BINTRAY_KEY=<secure>"
  - secure: "AjycfSfIztFeat6AO3SETSFW9Xd0AUt17hg87sEo8pSPO3SILq6bKS5Pfe4Bdo3Za32BvGzeJaOZ9EEVtzweuYJwsBejVfk2lxiBH5RKoBVrHpJLXDNj7MUt2ezb734bjFFt3+lMG84vSCqioNMcYwlHcqCChiTT529NZhaGMsDFzF5NimJZl0LGcEQlaTxTfeCKwSk+apHw5rQes2I2Jf9icweUGe/VOOVmYjDTiPWKcBEwBvfV5vabr5btCgUY8zK5451x/35API2Hbq7o0hNxqvwQUFI54jZwqfR4DOA1V/Nk7rdc34Fe+xgKSoBmHC0RgCIbXw1erEkn31Y0+tLBVxa971FB+y7L+5ZEaqw9UolT0PM5LHZmWUA60A5JlvsFOr0urid8lk0g5mdGF4aHEy2O5rDOMbwE11MpTEkDDbgE6uSD0/aubTJYPu24yMlBrP1lz10Sltg+YLi5hshhzRmd4iWTKuEy4jly1SdOKjjdbLCzlAnsF9Ta0a/lfumOd2lmELhYKhFLuVTCWZFvjpJyziCIFLVs4refDbDrsdfE+CaJedP/uBDGoBp4Hg6aug+66zKPybVzODqR2uIa3I7ACM3l/GdJcGg+1AH1T/ievq4rQ52T3MspevFxQmevuA9vvgOVko79PDrW1xbp+oQPTk0/pODNjVvrZFk="

before_install:
    - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update -qq

install:
    - sudo apt-get -y install gcc-6 g++-6
    - sudo apt-get -y install libusb-1.0-0-dev pkg-config libmp3lame-dev libmpg123-dev qt510base qt510declarative qt510quickcontrols qt510quickcontrols2 qt510charts-no-lgpl qt510multimedia libpulse0 libfaad-dev libfftw3-dev librtlsdr-dev libusb-1.0-0-dev mesa-common-dev libglu1-mesa-dev libpulse-dev
    - source /opt/qt510/bin/qt510-env.sh
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6

script:
  - DATE=`date +%Y%m%d`
  - GIT_HASH=`git rev-parse --short HEAD`
  - # https://github.com/airspy/airspyone_host#how-to-build-the-host-software-on-linux
  - wget https://github.com/airspy/host/archive/master.zip
  - unzip master.zip
  - cd airspyone_host-master/
  - mkdir build
  - cd build
  - cmake ../ -DINSTALL_UDEV_RULES=ON -DCMAKE_INSTALL_PREFIX=/usr
  - make
  - sudo make install
  - sudo ldconfig
  - cd ../..
  - mkdir build
  - cd build
  - qmake PREFIX=/usr ..
  - make -j4
  - # sudo make INSTALL_ROOT=../appdir install ; sudo chown -R $USER appdir ; find appdir/
  - # "make install" seems not implemented, hence going though the following steps manually:
  - cd ..
  - find build/
  - mkdir -p ./appdir/usr/share/applications
  - cp welle-io.desktop ./appdir/usr/share/applications
  - mkdir -p ./appdir/usr/bin
  - cp build/src/welle-gui/welle-io ./appdir/usr/bin
  - mkdir -p ./appdir/usr/lib
  - mkdir -p ./appdir/usr/share/icons/hicolor/512x512/apps/
  - cp src/welle-gui/icon/icon.png appdir/usr/share/icons/hicolor/512x512/apps/welle-io.png

after_success:
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt*.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -qmldir=. -bundle-non-qt-libs
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -qmldir=. -appimage
  - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  #- curl --upload-file ./welle*.AppImage https://transfer.sh/welle_io-git."$GIT_HASH"-x86_64.AppImage
  # Rename
  - mv welle.io-x86_64.AppImage "$DATE"_"$GIT_HASH"_Linux_welle-io-x86_64.AppImage
  # Prepare bintray deploy
  - sed -e "s/\${VERSION}/"$DATE"_"$GIT_HASH"/" .travis-bintray-deploy.json.template >travis-bintray-deploy.json

deploy:
  on:
   branch: next
  provider: bintray
  file: "travis-bintray-deploy.json"
  user: "albrechtl"
  skip_cleanup: true
  key: $BINTRAY_KEY

after_deploy:
  # Delete old builds on bintray. Keep only the last 20 builds
  - python .bintray_delete_old_version.py albrechtl $BINTRAY_KEY /packages/albrechtl/welle.io/welle.io_nightly 20
